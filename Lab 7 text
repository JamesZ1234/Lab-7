#include "vex.h"

using namespace vex;

// Function to run when the V5 Brain's screen is pressed
void onScreenPressed() {
  //RoboticArm1.moveToPositionLinear(10.2,5.3,6);
  if (Brain.Screen.xPosition() > 250) {
    if (Brain.Screen.yPosition() > 125) {
      // Blue Box Pressed
      wait(1,seconds);
      RoboticArm1.moveToPositionLinear(10.2,5.3,6);
      RoboticArm1.moveToPositionLinear(10.2,5.3,5);
      wait(1, seconds);
      Magnet5.drop();
      RoboticArm1.moveToPositionLinear(10.2,5.3,6);
      //------
    }
    else {
      // Green Box Pressed
      wait(1,seconds);
      RoboticArm1.moveToPositionLinear(8,6.5,6);
      RoboticArm1.moveToPositionLinear(8,6.5,5);
      wait(1, seconds);
      Magnet5.drop();
      RoboticArm1.moveToPositionLinear(8,6.5,6);
    }
  }
  else {
    if (Brain.Screen.yPosition() > 125) {
      // Red Box Pressed
      wait(1,seconds);
      RoboticArm1.moveToPositionLinear(10.5,2.7,6);
      RoboticArm1.moveToPositionLinear(10.5,2.7,5);
      wait(1, seconds);
      Magnet5.drop();
      RoboticArm1.moveToPositionLinear(10.5,2.7,6);
      
    }
    else {
      // White Box Pressed
      float r1x= 8.8;
      float r1y= -6.7;
      float r1z= 7;
      Magnet5.setPower(0);
      RoboticArm1.moveToPositionJoint(6,3,6);
      //^^prevents lash do not remove, base
      //^^easy recalibration of the white box
      RoboticArm1.moveToPositionLinear(r1x,r1y,r1z);
      wait(1,seconds);
      //RoboticArm1.setLinearMoveSpeed(2);//set at inches per second, 2
      RoboticArm1.moveToPositionLinear(r1x,r1y,r1z-4);
      wait(1, seconds);
      Magnet5.setPower(100);
      //wait(2,seconds);
      //Magnet5.setPower(100);
      RoboticArm1.moveToPositionLinear(r1x,r1y,r1z);
      //RoboticArm1.setLinearMoveSpeed(5);
      r1z=r1z-1;
    }
  }
}

// Function to run when the emergency stop button is pressed
void onEStopPressed() {
  RoboticArm1.emergencyStop();
}

int main() {
  // Initializing Robot Configuration. DO NOT REMOVE!
  vexcodeInit();
  
  // register event handlers
  Brain.Screen.pressed(onScreenPressed);
  EStop.pressed(onEStopPressed);

  wait(15, msec);
  // post event registration

  // draw UI on brain screen
  Brain.Screen.setPenColor(white);
  Brain.Screen.setFillColor(white);
  Brain.Screen.drawRectangle(30, 10, 200, 100);
  Brain.Screen.setFillColor(red);
  Brain.Screen.drawRectangle(30, 125, 200, 100);
  Brain.Screen.setFillColor(green);
  Brain.Screen.drawRectangle(250, 10, 200, 100);
  Brain.Screen.setFillColor(blue);
  Brain.Screen.drawRectangle(250, 125, 200, 100);

  // configure the arm
  RoboticArm1.setMasteringValues(1848, 2141, 1883, 629);
  //orignal code^^
 // RoboticArm1.setMasteringValues(1894, 1944, 1758, 623);
  //New code^^
  RoboticArm1.setToolTipOffset(0,0,0);
  Magnet5.setPower(100);
}
